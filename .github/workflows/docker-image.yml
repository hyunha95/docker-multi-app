name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CODEDEPLOY_NAME: ${{ secrets.CODEDEPLOY_NAME }}
  CODEDEPLOY_GROUP: ${{ secrets.CODEDEPLOY_GROUP }}


# 코드의 내용을 이 파일을 실행하여 action을 수행하는 주체(Github Actions에서 사용하는 VM)가 읽을 수 있도록 허용합니다.
permissions:
  contents: read

jobs:
  test_build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: PWD
      run: pwd
    - name: LS
      run: ls
    - name: Build the Docker test image
      run: docker build -t nohyunha95/react-test-app -f ./frontend/Dockerfile.dev ./frontend
  
    - name: Run the Docker test image
      run: docker run -e CI=true nohyunha95/react-test-app npm test

    - name: Build other images
      run: |
        docker build -t nohyunha95/docker-frontend ./frontend
        docker build -t nohyunha95/docker-backend ./backend
        docker build -t nohyunha95/docker-nginx ./nginx
        echo ${{secrets.DOCKER_HUB_PASSWORD}} | docker login -u ${{secrets.DOCKER_HUB_ID}} --password-stdin

        docker push nohyunha95/docker-frontend
        docker push nohyunha95/docker-backend
        docker push nohyunha95/docker-nginx

    - name : Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

    - name: Make a zip file
      run: zip -r docker-compose.zip ./docker-compose.yml ./appspec.yml ./scripts

    - name: Upload to S3
      run: aws s3 cp --region $AWS_REGION ./docker-compose.yml s3://$S3_BUCKET_NAME/docker-compose.zip

    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODEDEPLOY_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODEDEPLOY_GROUP --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=docker-compose.zip